---
import { GoogleAnalytics } from "astro-google-analytics";
import Footer from "@/components/Footer.astro";
import Header from "@/components/Header.astro";
import Tooltips from "@/components/Tooltips.astro";
import "./global.css";

const title = Astro.props.frontmatter?.title || Astro.props.title;

const {
  PUBLIC_TITLE: TITLE,
  PUBLIC_DESCRIPTION: DESCRIPTION,
  SITE: URL,
} = import.meta.env;
---

<!doctype html>
<html lang="en" transition:animate="none">
  <head>
    <GoogleAnalytics id="G-Y6DS7LND0G" />

    <!-- basic -->
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <title>{[title, TITLE].filter(Boolean).join(" | ")}</title>
    <meta name="title" content={TITLE} />
    <meta name="description" content={DESCRIPTION} />

    <!-- favicons -->
    <link rel="icon" type="image/png" sizes="512x512" href="/icon.png" />

    <!-- open graph -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={URL} />
    <meta property="og:title" content={TITLE} />
    <meta property="og:description" content={DESCRIPTION} />
    <meta property="og:image" content="share.jpg" />

    <!-- fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Barlow:ital,wght@0,200;0,400;0,500;0,600&display=swap"
      rel="stylesheet"
    />

    <!-- misc -->
    <meta name="generator" content="{Astro.generator}" />

    <Tooltips />
  </head>

  <body>
    <Header />
    <main>
      <slot />
    </main>
    <Footer />

    <script>
      import { sleep } from "@/util/misc";

      const hashChange = async () => {
        /** get hash in url */
        const { hash } = window.location;

        if (!hash) return;

        /** find element whose id matches hash */
        const element = document.getElementById(hash.slice(1));

        if (!element) return;

        /** wait for layout changes */
        await sleep(100);

        /** glow element */
        element.animate(
          [
            {
              background: "var(--primary)",
              borderRadius: "var(--rounded)",
            },
            {
              background: "",
              borderRadius: "var(--rounded)",
            },
          ],
          { duration: 2000, iterations: 1 },
        );

        /** scroll to element */
        element.scrollIntoView({ block: "start" });
      };

      window.addEventListener("load", hashChange);
      window.addEventListener("hashchange", hashChange);
    </script>
  </body>
</html>
