---

---

<script>
  import tippy from "tippy.js";

  /** add tooltips to any element with data-tooltip attribute */

  /** tippy options */
  const options = {
    delay: [100, 0],
    duration: [100, 100],
    offset: [0, 15],
    allowHTML: true,
    hideOnClick: false,

    /** for debugging */
    // onHide: () => false,
  };

  /** set up tippy */
  const init = () => {
    /** attach tooltips to already-present (statically generated) elements */
    updateAll();

    /** listen for changes to document */
    new MutationObserver(updateAll).observe(document.body, {
      childList: true,
      subtree: true,
      attributes: true,
      attributeFilter: ["data-tooltip"],
    });
  };

  /** update all tooltips in document */
  const updateAll = () =>
    document.querySelectorAll("[data-tooltip]").forEach(update);

  /**  update tippy instance */
  const update = (element) => {
    /** if element unmounted, remove */
    if (!element.isConnected) return element._tippy?.destroy();

    /** get tooltip content from attribute */
    const content = element.getAttribute("data-tooltip")?.trim() || "";

    /** don't show if content blank */
    if (!content) return element._tippy?.destroy();

    const appendTo = element.closest("dialog") || document.body;

    /** get existing tippy instance or create new */
    const instance = element._tippy ?? tippy(element, { ...options, appendTo });

    /** update tippy content */
    instance.setContent(content);

    /** force re-position after rendering updates */
    if (instance.popperInstance)
      window.setTimeout(instance.popperInstance.update, 20);
  };

  window.addEventListener("load", init);
</script>

<style is:global>
  .tippy-box {
    max-width: 350px;
    padding: 10px 15px;
    border-radius: var(--rounded);
    background: var(--dark-gray);
    color: var(--white);
    /* pointer-events: all; */
  }

  .tippy-box * {
    line-height: inherit;
  }

  .tippy-arrow {
    z-index: -1;
  }

  .tippy-arrow::after {
    display: block;
    width: 10px;
    height: 10px;
    translate: 0 50%;
    rotate: 45deg;
    background: var(--dark-gray);
    content: "";
  }

  [data-placement="bottom"] .tippy-arrow {
    bottom: 100%;
  }

  .tippy-content {
    display: flex;
    flex-direction: column;
    gap: 5px;
  }
</style>
